#!/usr/bin/env python3
"""
Let's denote the funtction F(n) to be the number of the winning elf as a function
of the number of elves.
Then we can plot some values (by hand):

n | F(n)
--+----
1 | 1
2 | 1
3 | 3
4 | 1
..

If we look at some more examples (and we cannot do it by hand), let say from 1 to 300
we can see the following results (which are quite interesting above 27):


 n     | F(n)     | log(n, 3)        | n - 3**floor(log(n, 3))
-------+----------+------------------+-------------------------
     1 |        1 |          0.00000 |    0
     2 |        1 |          0.63093 |    1
     3 |        3 |          1.00000 |    0
     4 |        1 |          1.26186 |    1
     5 |        2 |          1.46497 |    2
     6 |        3 |          1.63093 |    3
     7 |        5 |          1.77124 |    4
     8 |        7 |          1.89279 |    5
     9 |        9 |          2.00000 |    0
    10 |        1 |          2.09590 |    1
    11 |        2 |          2.18266 |    2
    12 |        3 |          2.26186 |    3
    13 |        4 |          2.33472 |    4
    14 |        5 |          2.40217 |    5
    15 |        6 |          2.46497 |    6
    16 |        7 |          2.52372 |    7
    17 |        8 |          2.57890 |    8
    18 |        9 |          2.63093 |    9
    19 |       11 |          2.68014 |   10
    20 |       13 |          2.72683 |   11
    21 |       15 |          2.77124 |   12
    22 |       17 |          2.81359 |   13
    23 |       19 |          2.85405 |   14
    24 |       21 |          2.89279 |   15
    25 |       23 |          2.92995 |   16
    26 |       25 |          2.96565 |   17
    27 |       27 |          3.00000 |    0
    28 |        1 |          3.03310 |    1
    29 |        2 |          3.06504 |    2
    30 |        3 |          3.09590 |    3
    31 |        4 |          3.12575 |    4
    32 |        5 |          3.15465 |    5
    33 |        6 |          3.18266 |    6
    34 |        7 |          3.20983 |    7
    35 |        8 |          3.23622 |    8
    36 |        9 |          3.26186 |    9
    37 |       10 |          3.28680 |   10
    38 |       11 |          3.31107 |   11
    39 |       12 |          3.33472 |   12
    40 |       13 |          3.35776 |   13
    41 |       14 |          3.38024 |   14
    42 |       15 |          3.40217 |   15
    43 |       16 |          3.42359 |   16
    44 |       17 |          3.44452 |   17
    45 |       18 |          3.46497 |   18
    46 |       19 |          3.48498 |   19
    47 |       20 |          3.50456 |   20
    48 |       21 |          3.52372 |   21
    49 |       22 |          3.54249 |   22
    50 |       23 |          3.56088 |   23
    51 |       24 |          3.57890 |   24
    52 |       25 |          3.59658 |   25
    53 |       26 |          3.61392 |   26
    54 |       27 |          3.63093 |   27
    55 |       29 |          3.64763 |   28
    56 |       31 |          3.66403 |   29
    57 |       33 |          3.68014 |   30
    58 |       35 |          3.69597 |   31
    59 |       37 |          3.71153 |   32
    60 |       39 |          3.72683 |   33
    61 |       41 |          3.74188 |   34
    62 |       43 |          3.75668 |   35
    63 |       45 |          3.77124 |   36
    64 |       47 |          3.78558 |   37
    65 |       49 |          3.79969 |   38
    66 |       51 |          3.81359 |   39
    67 |       53 |          3.82728 |   40
    68 |       55 |          3.84076 |   41
    69 |       57 |          3.85405 |   42
    70 |       59 |          3.86715 |   43
    71 |       61 |          3.88006 |   44
    72 |       63 |          3.89279 |   45
    73 |       65 |          3.90534 |   46
    74 |       67 |          3.91773 |   47
    75 |       69 |          3.92995 |   48
    76 |       71 |          3.94200 |   49
    77 |       73 |          3.95390 |   50
    78 |       75 |          3.96565 |   51
    79 |       77 |          3.97724 |   52
    80 |       79 |          3.98869 |   53
    81 |       81 |          4.00000 |    0
    82 |        1 |          4.01117 |    1
    83 |        2 |          4.02220 |    2
    84 |        3 |          4.03310 |    3
    85 |        4 |          4.04388 |    4
    86 |        5 |          4.05452 |    5
    87 |        6 |          4.06504 |    6
    88 |        7 |          4.07545 |    7
    89 |        8 |          4.08573 |    8
    90 |        9 |          4.09590 |    9
    91 |       10 |          4.10596 |   10
    92 |       11 |          4.11591 |   11
    93 |       12 |          4.12575 |   12
    94 |       13 |          4.13549 |   13
    95 |       14 |          4.14512 |   14
    96 |       15 |          4.15465 |   15
    97 |       16 |          4.16408 |   16
    98 |       17 |          4.17342 |   17
    99 |       18 |          4.18266 |   18
   100 |       19 |          4.19181 |   19
   101 |       20 |          4.20086 |   20
   102 |       21 |          4.20983 |   21
   103 |       22 |          4.21871 |   22
   104 |       23 |          4.22751 |   23
   105 |       24 |          4.23622 |   24
   106 |       25 |          4.24485 |   25
   107 |       26 |          4.25339 |   26
   108 |       27 |          4.26186 |   27
   109 |       28 |          4.27025 |   28
   110 |       29 |          4.27856 |   29
   111 |       30 |          4.28680 |   30
   112 |       31 |          4.29496 |   31
   113 |       32 |          4.30305 |   32
   114 |       33 |          4.31107 |   33
   115 |       34 |          4.31902 |   34
   116 |       35 |          4.32690 |   35
   117 |       36 |          4.33472 |   36
   118 |       37 |          4.34246 |   37
   119 |       38 |          4.35015 |   38
   120 |       39 |          4.35776 |   39
   121 |       40 |          4.36532 |   40
   122 |       41 |          4.37281 |   41
   123 |       42 |          4.38024 |   42
   124 |       43 |          4.38761 |   43
   125 |       44 |          4.39492 |   44
   126 |       45 |          4.40217 |   45
   127 |       46 |          4.40937 |   46
   128 |       47 |          4.41651 |   47
   129 |       48 |          4.42359 |   48
   130 |       49 |          4.43062 |   49
   131 |       50 |          4.43760 |   50
   132 |       51 |          4.44452 |   51
   133 |       52 |          4.45139 |   52
   134 |       53 |          4.45821 |   53
   135 |       54 |          4.46497 |   54
   136 |       55 |          4.47169 |   55
   137 |       56 |          4.47836 |   56
   138 |       57 |          4.48498 |   57
   139 |       58 |          4.49155 |   58
   140 |       59 |          4.49808 |   59
   141 |       60 |          4.50456 |   60
   142 |       61 |          4.51099 |   61
   143 |       62 |          4.51738 |   62
   144 |       63 |          4.52372 |   63
   145 |       64 |          4.53002 |   64
   146 |       65 |          4.53627 |   65
   147 |       66 |          4.54249 |   66
   148 |       67 |          4.54866 |   67
   149 |       68 |          4.55479 |   68
   150 |       69 |          4.56088 |   69
   151 |       70 |          4.56692 |   70
   152 |       71 |          4.57293 |   71
   153 |       72 |          4.57890 |   72
   154 |       73 |          4.58483 |   73
   155 |       74 |          4.59072 |   74
   156 |       75 |          4.59658 |   75
   157 |       76 |          4.60239 |   76
   158 |       77 |          4.60817 |   77
   159 |       78 |          4.61392 |   78
   160 |       79 |          4.61962 |   79
   161 |       80 |          4.62529 |   80
   162 |       81 |          4.63093 |   81
   163 |       83 |          4.63653 |   82
   164 |       85 |          4.64210 |   83
   165 |       87 |          4.64763 |   84
   166 |       89 |          4.65313 |   85
   167 |       91 |          4.65860 |   86
   168 |       93 |          4.66403 |   87
   169 |       95 |          4.66944 |   88
   170 |       97 |          4.67481 |   89
   171 |       99 |          4.68014 |   90
   172 |      101 |          4.68545 |   91
   173 |      103 |          4.69073 |   92
   174 |      105 |          4.69597 |   93
   175 |      107 |          4.70119 |   94
   176 |      109 |          4.70638 |   95
   177 |      111 |          4.71153 |   96
   178 |      113 |          4.71666 |   97
   179 |      115 |          4.72176 |   98
   180 |      117 |          4.72683 |   99
   181 |      119 |          4.73188 |  100
   182 |      121 |          4.73689 |  101
   183 |      123 |          4.74188 |  102
   184 |      125 |          4.74684 |  103
   185 |      127 |          4.75177 |  104
   186 |      129 |          4.75668 |  105
   187 |      131 |          4.76156 |  106
   188 |      133 |          4.76641 |  107
   189 |      135 |          4.77124 |  108
   190 |      137 |          4.77605 |  109
   191 |      139 |          4.78083 |  110
   192 |      141 |          4.78558 |  111
   193 |      143 |          4.79031 |  112
   194 |      145 |          4.79501 |  113
   195 |      147 |          4.79969 |  114
   196 |      149 |          4.80435 |  115
   197 |      151 |          4.80898 |  116
   198 |      153 |          4.81359 |  117
   199 |      155 |          4.81817 |  118
   200 |      157 |          4.82274 |  119
   201 |      159 |          4.82728 |  120
   202 |      161 |          4.83179 |  121
   203 |      163 |          4.83629 |  122
   204 |      165 |          4.84076 |  123
   205 |      167 |          4.84521 |  124
   206 |      169 |          4.84964 |  125
   207 |      171 |          4.85405 |  126
   208 |      173 |          4.85844 |  127
   209 |      175 |          4.86280 |  128
   210 |      177 |          4.86715 |  129
   211 |      179 |          4.87147 |  130
   212 |      181 |          4.87577 |  131
   213 |      183 |          4.88006 |  132
   214 |      185 |          4.88432 |  133
   215 |      187 |          4.88857 |  134
   216 |      189 |          4.89279 |  135
   217 |      191 |          4.89699 |  136
   218 |      193 |          4.90118 |  137
   219 |      195 |          4.90534 |  138
   220 |      197 |          4.90949 |  139
   221 |      199 |          4.91362 |  140
   222 |      201 |          4.91773 |  141
   223 |      203 |          4.92182 |  142
   224 |      205 |          4.92589 |  143
   225 |      207 |          4.92995 |  144
   226 |      209 |          4.93398 |  145
   227 |      211 |          4.93800 |  146
   228 |      213 |          4.94200 |  147
   229 |      215 |          4.94599 |  148
   230 |      217 |          4.94995 |  149
   231 |      219 |          4.95390 |  150
   232 |      221 |          4.95783 |  151
   233 |      223 |          4.96175 |  152
   234 |      225 |          4.96565 |  153
   235 |      227 |          4.96953 |  154
   236 |      229 |          4.97339 |  155
   237 |      231 |          4.97724 |  156
   238 |      233 |          4.98108 |  157
   239 |      235 |          4.98489 |  158
   240 |      237 |          4.98869 |  159
   241 |      239 |          4.99248 |  160
   242 |      241 |          4.99625 |  161
   243 |      243 |          5.00000 |  162
   244 |        1 |          5.00374 |    1
   245 |        2 |          5.00746 |    2
   246 |        3 |          5.01117 |    3
   247 |        4 |          5.01486 |    4
   248 |        5 |          5.01854 |    5
   249 |        6 |          5.02220 |    6
   250 |        7 |          5.02585 |    7
   251 |        8 |          5.02948 |    8
   252 |        9 |          5.03310 |    9
   253 |       10 |          5.03671 |   10
   254 |       11 |          5.04030 |   11
   255 |       12 |          5.04388 |   12
   256 |       13 |          5.04744 |   13
   257 |       14 |          5.05099 |   14
   258 |       15 |          5.05452 |   15
   259 |       16 |          5.05804 |   16
   260 |       17 |          5.06155 |   17
   261 |       18 |          5.06504 |   18
   262 |       19 |          5.06853 |   19
   263 |       20 |          5.07199 |   20
   264 |       21 |          5.07545 |   21
   265 |       22 |          5.07889 |   22
   266 |       23 |          5.08232 |   23
   267 |       24 |          5.08573 |   24
   268 |       25 |          5.08914 |   25
   269 |       26 |          5.09253 |   26
   270 |       27 |          5.09590 |   27
   271 |       28 |          5.09927 |   28
   272 |       29 |          5.10262 |   29
   273 |       30 |          5.10596 |   30
   274 |       31 |          5.10929 |   31
   275 |       32 |          5.11261 |   32
   276 |       33 |          5.11591 |   33
   277 |       34 |          5.11920 |   34
   278 |       35 |          5.12248 |   35
   279 |       36 |          5.12575 |   36
   280 |       37 |          5.12901 |   37
   281 |       38 |          5.13225 |   38
   282 |       39 |          5.13549 |   39
   283 |       40 |          5.13871 |   40
   284 |       41 |          5.14192 |   41
   285 |       42 |          5.14512 |   42
   286 |       43 |          5.14831 |   43
   287 |       44 |          5.15148 |   44
   288 |       45 |          5.15465 |   45
   289 |       46 |          5.15780 |   46
   290 |       47 |          5.16095 |   47
   291 |       48 |          5.16408 |   48
   292 |       49 |          5.16720 |   49
   293 |       50 |          5.17032 |   50
   294 |       51 |          5.17342 |   51
   295 |       52 |          5.17651 |   52
   296 |       53 |          5.17959 |   53
   297 |       54 |          5.18266 |   54
   298 |       55 |          5.18572 |   55
   299 |       56 |          5.18877 |   56
   300 |       57 |          5.19181 |   57


We can see that the function equals n at every 3^i (i is integer) - see
the results for i={1,2,3,4,5}.
In between, seems that the function follows something like this:
  
Let:
  l = floor(log(n, 3))
  k = n - 3**l
  
  F(n) = if l == 1 or k <= 3**l then return k
         else 3**l + 2*(k-3**l)

Examples:

for 5:
  l = 1
  k = 5 - 3**1 = 2
  should return 2 since l-1 is 0
  
for 253:
  l = 5
  k = 253 - 3**5 = 253-243 = 10
  should return 10 because 10 < 3^4

"""

ne = 3001330
from math import log, floor


def f(n):
  l = floor(log(n, 3))
  k = n - 3**l
  if k == 0:
    return n # is a power of 3
  if l == 1 or k <= (3**l):
    return k
  else:
    return 3**l + 2*(k-3**l)
  

def solve(n):
  a = [(i+1) for i in range(0,n)]
  for i in range(0, n-1):
    l = n-i
    del a[l//2]
    a = a[1:] + [a[0]]
  return a[0]


print("Some example values of the function F(n):\n")
print(" n     | F(n)     | log(n, 3)        | n - 3**floor(log(n, 3))")
print("-------+----------+------------------+-------------------------")
for i in range(1, 301):
  s = solve(i)
  print(" %5d |     %4d |          %2.5f | %4d"%(i, s, log(i, 3), i - 3**floor(log(i, 3))))

print('-----------')
print('Test F(1): ', f(1))
print('Test F(2): ', f(2))
print('Test F(3): ', f(3))
print('Test F(4): ', f(4))
print('Test F(5): ', f(5))
print('Test F(9): ', f(9))
print('Test F(253) should be 10: ', f(253))
print('Test F(239) should be 235: ', f(239))
print('-----------')
print('Solution F(%d): ' % ne, f(ne))

